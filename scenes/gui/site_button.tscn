[gd_scene load_steps=13 format=2]

[ext_resource path="res://scripts/gui/site_button.gd" type="Script" id=1]
[ext_resource path="res://images/gui/background_icons/ribbon_farm.png" type="Texture" id=2]
[ext_resource path="res://images/gui/gem1.png" type="Texture" id=3]
[ext_resource path="res://images/gui/background_icons/farm_icon.png" type="Texture" id=4]
[ext_resource path="res://images/particles/portal.png" type="Texture" id=5]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float saturation : hint_range(0.0, 3.0) = 0.0;

void fragment() {
    vec4 tex_color = texture(TEXTURE, UV);

    COLOR.rgb = mix(vec3(dot(tex_color.rgb, vec3(0.299, 0.587, 0.114))), tex_color.rgb, saturation);
	COLOR.a = tex_color.a;
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/saturation = 0.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

/*
	Original code is by 9exa avaliable here:
	https://godotshaders.com/shader/vortex-overlay/
	[originally released under MIT license]
*/
uniform float max_blend : hint_range(0,1) = 0.5;
uniform float rotation_offset : hint_range(0.0, 10.0) = 0.0; // has a cycle of 1. at exacly 1 this repeats itself.
uniform float intensity : hint_range(0, 10);
uniform bool invert = false;
uniform vec2 rel_rect_size = vec2(1024, 600);
uniform vec4 color : hint_color;

float distFromCen(vec2 p) {
	return distance(p, vec2(0.5));
}
//rotates by angle radians
vec2 rotate(vec2 p, float angle){
	return vec2(cos(angle)*p.x-sin(angle)*p.y, sin(angle)*p.x + cos(angle)*p.y);
	}

void fragment() {
	vec4 c = mix(COLOR, color, 1.0);
	
	float distMod = invert ? distFromCen(UV) : 0.5 - distFromCen(UV);
	float angle = (intensity * distMod  + rotation_offset)* 6.28318;
	vec2 newp = rotate(UV-vec2(0.5), angle) + vec2(0.5);
	vec2 disp = (newp - UV) * rel_rect_size * SCREEN_PIXEL_SIZE;
	disp.y = -disp.y; // for some reason UV and SCEEN_UV are inveresed
	COLOR = mix(texture(SCREEN_TEXTURE, SCREEN_UV + disp), color, max_blend * 2.0 * (0.5-distFromCen(UV)));
	//COLOR = c;
	//Doesn'[t apply effect outside of circle]
	if (distFromCen(UV) > 0.5) {
		COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	}
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/max_blend = 0.5
shader_param/rotation_offset = 0.0
shader_param/intensity = 0.44
shader_param/invert = false
shader_param/rel_rect_size = Vector2( 200, 400 )
shader_param/color = Color( 0.694118, 0.309804, 0.815686, 1 )

[sub_resource type="Animation" id=5]
tracks/0/type = "value"
tracks/0/path = NodePath("main_button:material:shader_param/saturation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0 ]
}

[sub_resource type="Animation" id=6]
tracks/0/type = "value"
tracks/0/path = NodePath("main_button:material:shader_param/saturation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0 ]
}

[sub_resource type="Animation" id=7]
tracks/0/type = "value"
tracks/0/path = NodePath("main_button:material:shader_param/saturation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="site_button" type="Node2D"]
script = ExtResource( 1 )

[node name="main_button" type="TextureButton" parent="."]
material = SubResource( 2 )
margin_left = -8.0
margin_top = -32.0
margin_right = 128.0
margin_bottom = 77.0
texture_normal = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="main_button"]
show_behind_parent = true
material = SubResource( 4 )
position = Vector2( 52, 75 )
scale = Vector2( 0.508772, 0.555184 )
texture = ExtResource( 5 )

[node name="ribbon_button" type="TextureButton" parent="."]
margin_left = -76.0
margin_top = 68.0
margin_right = 164.0
margin_bottom = 176.0
texture_normal = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="site_name_label" type="Label" parent="ribbon_button"]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -56.5
margin_top = -38.0
margin_right = 46.5
margin_bottom = -24.0
text = "The fairy swamp"
__meta__ = {
"_edit_use_anchors_": true
}

[node name="main_container" type="VBoxContainer" parent="."]
margin_left = -16.0
margin_top = 146.0
margin_right = 120.0
margin_bottom = 199.0
custom_constants/separation = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="main_button" type="Button" parent="main_container"]
visible = false
margin_top = 3.0
margin_right = 136.0
margin_bottom = 39.0
text = "Farm"

[node name="purchase_container" type="HBoxContainer" parent="main_container"]
margin_right = 136.0
margin_bottom = 50.0
rect_min_size = Vector2( 0, 50 )

[node name="purchase_button" type="Button" parent="main_container/purchase_container"]
margin_right = 56.0
margin_bottom = 50.0
text = "Unlock"

[node name="purchase_label" type="Label" parent="main_container/purchase_container"]
margin_left = 60.0
margin_top = 9.0
margin_right = 76.0
margin_bottom = 40.0
text = "10
"

[node name="purchase_icon" type="TextureRect" parent="main_container/purchase_container"]
margin_left = 80.0
margin_right = 103.0
margin_bottom = 50.0
texture = ExtResource( 3 )

[node name="additional_purchase_container" type="HBoxContainer" parent="main_container"]
margin_top = 53.0
margin_right = 136.0
margin_bottom = 53.0
custom_constants/separation = 0

[node name="anim" type="AnimationPlayer" parent="."]
autoplay = "locked"
anims/locked = SubResource( 5 )
anims/unlocked = SubResource( 6 )
anims/unlocking = SubResource( 7 )
