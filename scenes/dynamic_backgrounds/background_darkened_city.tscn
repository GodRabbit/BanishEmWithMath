[gd_scene load_steps=15 format=2]

[ext_resource path="res://images/backgrounds/bear_land.png" type="Texture" id=1]
[ext_resource path="res://scenes/overworld/enemies/bosses/boss_ancient_rage_schnoop.tscn" type="PackedScene" id=2]
[ext_resource path="res://images/particles/particle_smoke.png" type="Texture" id=3]
[ext_resource path="res://images/noise/noize5.png" type="Texture" id=4]
[ext_resource path="res://scripts/dynamic_backgrounds/background_darkened_city.gd" type="Script" id=5]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float hue : hint_range(-360, 360) = 0;
uniform float saturation : hint_range(0.0, 3.0) = 1.0;

/*
A shader that is both hue and saturation shader combined
*/

float _clamp(float v){
	if(v < 0.0){
		return 0.0;
	}
	if(v > 255.0){
		return 255.0;
	}
	return v;
}

vec3 transform_hue(vec3 color, float h){
	float cosA = cos(radians(h)); // hue <h> is in degrees
	float sinA = sin(radians(h)); // hue <h> is in degrees
	
	// this matrix rotates the RGB cube h degrees
	mat3 t_matrix = mat3(vec3(cosA + (1.0 - cosA)/3.0, (1.0 - cosA)/3.0 - sqrt(1.0/3.0)*sinA, (1.0 - cosA)/3.0 + sqrt(1.0/3.0)*sinA),  
	vec3((1.0 - cosA)/3.0 + sqrt(1.0/3.0)*sinA, cosA + (1.0 - cosA)/3.0, (1.0 - cosA)/3.0 - sqrt(1.0/3.0)*sinA), 
	vec3((1.0 - cosA)/3.0 - sqrt(1.0/3.0)*sinA, (1.0 - cosA)/3.0 + sqrt(1.0/3.0)*sinA, cosA + (1.0 - cosA)/3.0));
	
	float r = _clamp(color.r*t_matrix[0][0] + color.g*t_matrix[0][1] + color.b*t_matrix[0][2]);
	float g = _clamp(color.r*t_matrix[1][0] + color.g*t_matrix[1][1] + color.b*t_matrix[1][2]);
	float b = _clamp(color.r*t_matrix[2][0] + color.g*t_matrix[2][1] + color.b*t_matrix[2][2]);
	return vec3(r, g, b);
}

void fragment(){
	COLOR = texture(TEXTURE, UV);
	vec3 out_color = transform_hue(COLOR.rgb, hue);
	
	COLOR.rgb = mix(vec3(dot(out_color, vec3(0.299, 0.587, 0.114))), out_color, saturation);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/hue = 31.079
shader_param/saturation = 1.0

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform sampler2D noise_texture;
uniform float speed : hint_range(0.0, 5.0) = 1.0;
uniform float noise_factor : hint_range(0.0, 5.0) = 1.0;

void fragment(){
	// get the distortion value from the texture
	vec4 t = texture(noise_texture, mod(UV - speed*TIME, vec2(1.0, 1.0)));
	float noise_val = (t.r + t.g + t.b)/3.0;
	// distort the  inner texture according to the disp & noise
	vec4 color1;
	 // if the texture is on, display inner texture instead of off texture
	COLOR = texture(SCREEN_TEXTURE, mod(SCREEN_UV + noise_factor*noise_val, vec2(1.0,1.0)));
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/speed = 0.01
shader_param/noise_factor = 0.084
shader_param/noise_texture = ExtResource( 4 )

[sub_resource type="Curve" id=1]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.514388, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.859712, 0.990374 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.941176, 1 )
colors = PoolColorArray( 0.205308, 0, 0.195165, 1, 0.0522518, 0.0365354, 0.0514755, 1, 0.208198, 0.201859, 0.209214, 0 )

[sub_resource type="Animation" id=8]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("background:material:shader_param/saturation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("background:material:shader_param/hue")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 31.079 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("boss_ancient_rage_schnoop:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=9]
resource_name = "death"
length = 15.0
tracks/0/type = "value"
tracks/0/path = NodePath("background:material:shader_param/hue")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 1.9, 2.4, 2.9, 3.4, 4, 4.5, 5.2, 5.7, 6.3, 6.8, 7.5, 8, 8.8, 9.3, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14.1, 14.6, 15 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079, 136.445, 31.079 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("background:material:shader_param/saturation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 1.9, 2.4, 2.9, 3.4, 4, 4.5, 5.2, 5.7, 6.3, 6.8, 7.5, 8, 8.8, 9.3, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14.1, 14.6, 15 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("boss_ancient_rage_schnoop:modulate")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 13.1, 15 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0.0117647, 0, 0.0117647, 1 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 14.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "call_schnoop_disappear"
} ]
}

[sub_resource type="Animation" id=7]
resource_name = "spawn"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("background:material:shader_param/saturation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7, 1.2, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 0.585, 1.658, 1.0 ]
}

[node name="background_darkened_city" type="Node2D"]
script = ExtResource( 5 )

[node name="background" type="Sprite" parent="."]
material = SubResource( 6 )
position = Vector2( 988, 560 )
texture = ExtResource( 1 )

[node name="distortion_shader" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 971.75, 1003.25 )
scale = Vector2( 1.01174, 0.23112 )
texture = ExtResource( 1 )

[node name="boss_ancient_rage_schnoop" parent="." instance=ExtResource( 2 )]
position = Vector2( 996, 536 )
scale = Vector2( 1.2, 1.2 )

[node name="overhead_smoke_particles" type="CPUParticles2D" parent="."]
position = Vector2( 1004, 16 )
amount = 300
lifetime = 4.0
texture = ExtResource( 3 )
emission_shape = 2
emission_rect_extents = Vector2( 1000, 20 )
gravity = Vector2( 0, 0 )
angle = 108.5
angle_random = 1.0
scale_amount = 7.0
scale_amount_curve = SubResource( 1 )
color_ramp = SubResource( 2 )

[node name="anim" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 8 )
anims/death = SubResource( 9 )
anims/spawn = SubResource( 7 )
